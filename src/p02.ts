import {range,add} from "ramda";
import {trace,collect} from "./common"

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
function* Fibonacci(max : number) : Iterable<number>{
    yield 1;
    yield 2;
    var lastPair = [1,2]
    const sumOfPair = () => lastPair[0] + lastPair[1]
    while(sumOfPair()<max){
        const result = sumOfPair()
        lastPair = [lastPair[1],result]
        yield result
    }
}

trace(collect( Fibonacci(4000000)).filter(x=>x%2===0).reduce(add))